import discord
import os
from flask import Flask
from discord import ui, SelectOption
from discord.ext import commands
from myserver import keep_alive

from PIL import Image, ImageDraw, ImageFont
from io import BytesIO
import requests
import json
from discord import ui
from datetime import datetime

# ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡πà‡∏ß‡∏ô intents
intents = discord.Intents.default()
intents.members = True  # new member in Dis
intents.message_content = True  # Read text

bot = commands.Bot(command_prefix='/', intents=intents)

WELCOME_CHANNEL_ID = 1375102199327363083  
REGISTER_CHANNEL_ID = 1361242784509726791 
ADMIN_CHANNEL_ID = 1361241867798446171
AUTOROLE_ID = 1361182119069749310  
PLAYER_ROLE_ID = 1361186568416657593
ADMIN_ROLE_ID = 1360585582832521236
PROFESSION_DISPLAY_CHANNEL_ID = 1384193675566776391
BANNER_TEMPLATE = "welcome_SalusaBG2.png"  
REGISTRATIONS_FILE = "registrations.json"  
CONFIG_FILE = "config.json"

# Dictionary ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡πÅ‡∏•‡∏∞ Role ID
PROFESSIONS = {
    1361305826798604440: "‡∏ú‡∏π‡πâ‡∏û‡∏¥‡∏ó‡∏±‡∏Å‡∏©‡πå‡πÅ‡∏´‡πà‡∏á SALUSA",
    1361303692766216313: "‡∏≠‡∏±‡∏ô‡∏ò‡∏û‡∏≤‡∏•‡πÅ‡∏´‡πà‡∏á SALUSA", 
    1361303934563778751: "‡πÄ‡∏û‡∏•‡∏á‡∏î‡∏≤‡∏ö‡∏ó‡∏°‡∏¥‡∏¨‡πÅ‡∏´‡πà‡∏á SALUSA",
    1361304137979002991: "‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡∏£‡∏µ‡∏î‡∏£‡πâ‡∏≠‡∏á‡πÅ‡∏´‡πà‡∏á SALUSA",
    1361304383345918022: "‡πÅ‡∏™‡∏á‡∏¢‡∏≤‡∏ô‡∏∏‡∏†‡∏≤‡∏û‡πÅ‡∏´‡πà‡∏á SALUSA",
    1361304546068005064: "‡∏™‡∏≤‡∏¢‡∏ò‡∏≤‡∏£‡πÅ‡∏´‡πà‡∏á SALUSA",
    1361304712061648908: "‡∏°‡∏∏‡∏°‡∏°‡∏∑‡∏î‡πÅ‡∏´‡πà‡∏á SALUSA",
    1361304887253667921: "‡πÄ‡∏õ‡∏•‡∏ß‡πÄ‡∏û‡∏•‡∏¥‡∏á‡πÅ‡∏´‡πà‡∏á SALUSA",
    1361305463718936616: "‡∏™‡∏≤‡∏¢‡∏ü‡πâ‡∏≤‡πÅ‡∏´‡πà‡∏á SALUSA",
    1361305165336150096: "‡∏™‡∏≤‡∏¢‡∏•‡∏°‡πÅ‡∏´‡πà‡∏á SALUSA",
    1361305687103111238: "‡∏õ‡∏≤‡∏Å‡∏ó‡πâ‡∏≠‡∏á‡πÅ‡∏´‡πà‡∏á SALUSA",
    1361306017438109808: "‡∏ü‡∏±‡∏ô‡πÄ‡∏ü‡∏∑‡∏≠‡∏á‡πÅ‡∏´‡πà‡∏á SALUSA",
    1361306190868516897: "‡πÄ‡∏°‡∏•‡πá‡∏î‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå‡πÅ‡∏´‡πà‡∏á SALUSA",
    1361306485409190061: "‡∏ô‡∏±‡∏Å‡∏ï‡∏Å‡∏õ‡∏•‡∏≤‡πÅ‡∏´‡πà‡∏á SALUSA",
    1361306651054968994: "‡πÅ‡∏™‡∏á‡∏™‡∏µ‡∏ó‡∏≠‡∏á‡πÅ‡∏´‡πà‡∏á SALUSA"
}

# ‡πÄ‡∏Å‡πá‡∏ö Message ID ‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏≠‡∏≤‡∏ä‡∏µ‡∏û
profession_messages = {}

# Load all log registrations
def load_registrations():
    try:
        with open(REGISTRATIONS_FILE, 'r', encoding='utf-8') as f:
            return json.load(f)
    except (FileNotFoundError, json.JSONDecodeError):
        return {}

# Save all log registrations
def save_registrations(data):
    with open(REGISTRATIONS_FILE, 'w', encoding='utf-8') as f:
        json.dump(data, f, ensure_ascii=False, indent=4)

# Load config 
def load_config():
    global AUTOROLE_ID, ADMIN_ROLE_ID
    try:
        with open(CONFIG_FILE, 'r', encoding='utf-8') as f:
            config = json.load(f)
            if 'AUTOROLE_ID' in config:
                AUTOROLE_ID = config['AUTOROLE_ID']
            if 'ADMIN_ROLE_ID' in config:
                ADMIN_ROLE_ID = config['ADMIN_ROLE_ID']
    except (FileNotFoundError, json.JSONDecodeError):
        # Use default value 
        pass

# Save config
def save_config():
    global AUTOROLE_ID, ADMIN_ROLE_ID
    config = {
        'AUTOROLE_ID': AUTOROLE_ID,
        'ADMIN_ROLE_ID': ADMIN_ROLE_ID
    }
    
    with open(CONFIG_FILE, 'w', encoding='utf-8') as f:
        json.dump(config, f, ensure_ascii=False, indent=4)

# ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤-‡∏≠‡∏≠‡∏Å‡∏Ç‡∏≠‡∏á‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
@bot.event
async def on_member_join(member):
    """‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå"""
    # ‡πÄ‡∏û‡∏¥‡πà‡∏° Auto Role ‡πÉ‡∏´‡πâ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà
    try:
        autorole = member.guild.get_role(AUTOROLE_ID)
        if autorole:
            await member.add_roles(autorole)
            print(f"‡πÄ‡∏û‡∏¥‡πà‡∏° Auto Role ‡πÉ‡∏´‡πâ {member.name} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
        else:
            print(f"‡πÑ‡∏°‡πà‡∏û‡∏ö Auto Role (ID: {AUTOROLE_ID})")
    except Exception as e:
        print(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏° Auto Role: {str(e)}")
    
    # ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡πà‡∏≠‡∏á‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö
    welcome_channel = bot.get_channel(WELCOME_CHANNEL_ID)
    
    if welcome_channel and not member.bot:  # ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏ö‡∏≠‡∏ó
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ö‡∏ô‡πÄ‡∏ô‡∏≠‡∏£‡πå‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö
        welcome_banner = await create_welcome_banner(member)
        
        # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏ö‡∏ô‡πÄ‡∏ô‡∏≠‡∏£‡πå
        await welcome_channel.send(
            f"**‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö {member.mention} ‡∏™‡∏π‡πà SALUSA!** üéâ\n"
            f"‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡∏ó‡∏µ‡πà <#{REGISTER_CHANNEL_ID}> ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå",
            file=welcome_banner
        )

# Create registrations form Modal
class RegistrationForm(ui.Modal, title="‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô SALUSA"):
    steam_id = ui.TextInput(label="Steam ID", placeholder="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å Steam ID ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì", required=True)
    character_name = ui.TextInput(label="‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£", placeholder="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£", required=True)
    player_type = ui.TextInput(label="‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô (PVP ‡∏´‡∏£‡∏∑‡∏≠ PVE)", placeholder="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå PVP ‡∏´‡∏£‡∏∑‡∏≠ PVE", required=True)


async def on_submit(self, interaction: discord.Interaction):
    try:
        data = {
            "user_id": interaction.user.id,
            "username": interaction.user.name,
            "steam_id": self.steam_id.value,
            "character_name": self.character_name.value,
            "player_type": self.player_type.value.strip().upper(),  # ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏´‡∏ç‡πà‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡∏î‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á
            "timestamp": datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        }

        registrations = load_registrations()
        registrations[str(interaction.user.id)] = data
        save_registrations(registrations)

        # ‡∏™‡πà‡∏á DM ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì
        try:
            await interaction.user.send(
                f"‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô!\nSteam ID: {data['steam_id']}\n"
                f"‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£: {data['character_name']}\n‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô: {data['player_type']}"
            )
        except:
            pass

        # ‡∏™‡πà‡∏á embed ‡πÅ‡∏à‡πâ‡∏á‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
        admin_channel = bot.get_channel(ADMIN_CHANNEL_ID)
        if admin_channel:
            embed = discord.Embed(title="‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÉ‡∏´‡∏°‡πà", color=discord.Color.blue())
            embed.add_field(name="Steam ID", value=data['steam_id'], inline=False)
            embed.add_field(name="‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£", value=data['character_name'], inline=False)
            embed.add_field(name="‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô", value=data['player_type'], inline=False)
            embed.set_footer(text=f"‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠ {data['timestamp']}")
            await admin_channel.send(embed=embed)

        # ‡πÄ‡∏û‡∏¥‡πà‡∏° Role ‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πà‡∏ô
        guild = interaction.guild or (await bot.fetch_guild(interaction.guild_id))
        member = guild.get_member(interaction.user.id)
        if member:
            player_role = guild.get_role(PLAYER_ROLE_ID)
            if player_role:
                await member.add_roles(player_role)

            # ‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πà‡∏ô‡∏ï‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç PVP ‡∏´‡∏£‡∏∑‡∏≠ PVE
            prefix = ""
            if data['player_type'] == "PVP":
                prefix = "PVP"
            elif data['player_type'] == "PVE":
                prefix = "PVE"
            else:
                prefix = data['player_type']  # ‡∏Å‡∏£‡∏ì‡∏µ‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡πÉ‡∏ä‡πâ‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏Å‡∏°‡∏≤

            new_nick = f"{prefix}_{data['character_name']}"
            try:
                await member.edit(nick=new_nick)
            except Exception as e:
                print(f"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πà‡∏ô‡πÑ‡∏î‡πâ: {e}")

        await interaction.response.send_message("‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß! ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)

    except Exception as e:
        print(f"Error processing registration: {str(e)}")
        try:
            await interaction.response.send_message("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô ‡πÇ‡∏õ‡∏£‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á", ephemeral=True)
        except:
            pass

# ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô
class RegisterButton(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(label="‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà", style=discord.ButtonStyle.primary, emoji="üìù")
    async def register_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.send_modal(RegistrationForm())

@bot.event
async def on_ready():
    """‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏ó‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"""
    print(f'{bot.user.name} ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß!')
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô
    register_channel = bot.get_channel(REGISTER_CHANNEL_ID)
    if register_channel:
        # ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Å‡πà‡∏≤‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà
        async for message in register_channel.history(limit=100):
            if message.author == bot.user:
                await message.delete()
        
        embed = discord.Embed(
            title="‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏° SALUSA",
            description=(
                "‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå SALUSA!\n"
                "‡πÇ‡∏õ‡∏£‡∏î‡∏≠‡πà‡∏≤‡∏ô https://discord.com/channels/1360583634481975327/1390020203898998957 \n"
                "‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô PvE ‡πÇ‡∏õ‡∏£‡∏î‡∏≠‡πà‡∏≤‡∏ô https://discord.com/channels/1360583634481975327/1390025018167267368 \n"
                "‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô PvP ‡πÇ‡∏õ‡∏£‡∏î‡∏≠‡πà‡∏≤‡∏ô https://discord.com/channels/1360583634481975327/1390025183149949028 \n"
                "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤ ‡πÇ‡∏î‡∏¢‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏° '‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà' ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á\n"
            ),
            color=discord.Color.blue()
        )
        
        await register_channel.send(embed=embed, view=RegisterButton())

async def create_welcome_banner(member):
    """‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ö‡∏ô‡πÄ‡∏ô‡∏≠‡∏£‡πå‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡πç‡∏≤‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà"""
    # ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
    avatar_url = member.avatar.url if member.avatar else member.default_avatar.url
    avatar_response = requests.get(avatar_url)
    avatar_image = Image.open(BytesIO(avatar_response.content)).convert('RGBA')
    avatar_size = 255
    mask_size = 255
    
    # ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡∏∞‡∏ó‡πç‡∏≤‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏á‡∏Å‡∏•‡∏°
    avatar_image = avatar_image.resize((avatar_size, avatar_size))
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏≤‡∏Å‡∏ß‡∏á‡∏Å‡∏•‡∏°‡∏™‡πç‡∏≤‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
    mask = Image.new('L', (255, 255), 0)
    draw = ImageDraw.Draw(mask)
    draw.ellipse((0, 0, mask_size, mask_size), fill=255)
    
    # ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏°‡πà‡πÅ‡∏ö‡∏ö‡πÅ‡∏ö‡∏ô‡πÄ‡∏ô‡∏≠‡∏£‡πå
    try:
        template = Image.open(BANNER_TEMPLATE).convert('RGBA')
    except FileNotFoundError:
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ö‡∏ô‡πÄ‡∏ô‡∏≠‡∏£‡πå‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÅ‡∏°‡πà‡πÅ‡∏ö‡∏ö
        template = Image.new('RGBA', (1024, 500), (47, 49, 54, 255))
        
    # ‡∏ß‡∏≤‡∏á‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô‡∏ß‡∏á‡∏Å‡∏•‡∏°‡∏•‡∏á‡∏ö‡∏ô‡πÅ‡∏ö‡∏ô‡πÄ‡∏ô‡∏≠‡∏£‡πå
    avatar_with_mask = Image.new('RGBA', (mask_size, mask_size))
    avatar_with_mask.paste(avatar_image, (0, 0), mask)
    pos_x = 512 - (mask_size // 2)
    template.paste(avatar_with_mask, (pos_x, 70), avatar_with_mask)
    
    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    draw = ImageDraw.Draw(template)
    
    # ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÇ‡∏´‡∏•‡∏î‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡∏ó‡∏µ‡πà‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ (‡∏≠‡∏≤‡∏à‡∏ï‡πâ‡∏≠‡∏á‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏Å‡πà‡∏≠‡∏ô)
    try:
        title_font = ImageFont.truetype("NotoSans-Regular.ttf", 48)
        user_font = ImageFont.truetype("NotoSans-Regular.ttf", 36)
        watermark_font = ImageFont.truetype("NotoSans-Regular.ttf", 10)  # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏≤‡∏¢‡∏ô‡πâ‡∏≥
    except IOError:
        # ‡πÉ‡∏ä‡πâ‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
        title_font = ImageFont.load_default()
        user_font = ImageFont.load_default()
        watermark_font = ImageFont.load_default()
    
    draw.text((512, 365), "Welcome into SALUSA", fill=(255, 255, 255, 255), font=title_font, anchor="mm")
    draw.text((512, 420), f"{member.display_name}", fill=(230, 126, 32, 255), font=user_font, anchor="mm")
    
    watermark_text = "¬©2025 All Rights Reserved, Salusa"
    watermark_color = (255, 255, 255, 255) 
    
    watermark_x = template.width // 2  
    watermark_y = template.height - 20  
    
    draw.text((watermark_x, watermark_y), watermark_text, fill=watermark_color, font=watermark_font, anchor="ms")
    
    # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏ö‡∏ô‡πÄ‡∏ô‡∏≠‡∏£‡πå‡∏•‡∏á‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß
    buffer = BytesIO()
    template.save(buffer, format='PNG')
    buffer.seek(0)
    
    return discord.File(buffer, filename='welcome.png')

@bot.command()
@commands.has_permissions(administrator=True)
async def setautorole(ctx, role: discord.Role = None):
    """‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Role ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏´‡πâ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥"""
    global AUTOROLE_ID
    if role is None:
        # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏ Role ‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á Role ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
        current_role = ctx.guild.get_role(AUTOROLE_ID)
        if current_role:
            await ctx.send(f"Auto Role ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Ñ‡∏∑‡∏≠: {current_role.mention}")
        else:
            await ctx.send("‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Auto Role")
        return
    
    # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤ AUTOROLE_ID
    AUTOROLE_ID = role.id
    
    # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
    save_config()
    
    await ctx.send(f"‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Auto Role ‡πÄ‡∏õ‡πá‡∏ô {role.mention} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")

# ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Admin Role
@bot.command()
@commands.has_permissions(administrator=True)
async def setadminrole(ctx, role: discord.Role = None):
    """‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Admin Role ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ñ‡∏π‡∏Å mention ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÉ‡∏´‡∏°‡πà"""
    global ADMIN_ROLE_ID
    if role is None:
        # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏ Role ‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á Role ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
        current_role = ctx.guild.get_role(ADMIN_ROLE_ID)
        if current_role:
            await ctx.send(f"Admin Role ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Ñ‡∏∑‡∏≠: {current_role.mention}")
        else:
            await ctx.send("‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Admin Role")
        return
    
    # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤ ADMIN_ROLE_ID
    ADMIN_ROLE_ID = role.id
    
    # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
    save_config()
    
    await ctx.send(f"‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Admin Role ‡πÄ‡∏õ‡πá‡∏ô {role.mention} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")

# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô
@bot.command()
@commands.has_permissions(administrator=True)
async def registrations(ctx):
    """‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥"""
    registrations_data = load_registrations()
    
    if not registrations_data:
        await ctx.send("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥")
        return
    
    embed = discord.Embed(
        title="‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥",
        color=discord.Color.blue()
    )
    
    for user_id, data in registrations_data.items():
        embed.add_field(
            name=f"‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: {data['username']}",
            value=f"‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ô‡πÄ‡∏Å‡∏°: {data['in_game_name']}\nSteam ID: {data['steam_id']}\n‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô: {data['timestamp']}",
            inline=False
        )
    
    await ctx.send(embed=embed)

async def create_profession_embed(role_id, guild):
    """‡∏™‡∏£‡πâ‡∏≤‡∏á embed ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡∏´‡∏ô‡∏∂‡πà‡∏á‡πÜ"""
    role = guild.get_role(role_id)
    if not role:
        return None

    profession_name = PROFESSIONS[role_id]
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á embed ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡∏ô‡∏µ‡πâ
    embed = discord.Embed(
        color=role.color if role.color != discord.Color.default() else discord.Color.blue(),
        timestamp=datetime.now()
    )
    
    # ‡πÉ‡∏ä‡πâ set_author() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á role icon ‡πÅ‡∏•‡∏∞‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û
    if role.display_icon:
        embed.set_author(
            name=f" ‡∏≠‡∏≤‡∏ä‡∏µ‡∏û: {profession_name}",
            icon_url=role.display_icon.url
        )
    else:
        # ‡∏´‡∏≤‡∏Å role ‡πÑ‡∏°‡πà‡∏°‡∏µ icon ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ title ‡πÅ‡∏ö‡∏ö‡πÄ‡∏î‡∏¥‡∏°
        embed.title = f" ‡∏≠‡∏≤‡∏ä‡∏µ‡∏û: {profession_name}"
    
    # ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏î‡∏¥‡∏°...
    if role.members:
        member_list = []
        for member in role.members:
            join_date = member.joined_at.strftime("%d/%m/%Y") if member.joined_at else "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö"
            member_info = f"{member.mention} ‚Ä¢ **{member.display_name}** ‚Ä¢ `{join_date}`"
            member_list.append(member_info)

        if len(member_list) <= 15:
            embed.add_field(
                name=f"üìó ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å ({len(member_list)} ‡∏Ñ‡∏ô)",
                value="\n".join(member_list),
                inline=False
            )
        else:
            for i in range(0, len(member_list), 15):
                chunk = member_list[i:i+15]
                field_name = f"üìó ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å ({i+1}-{min(i+15, len(member_list))})"
                embed.add_field(
                    name=field_name,
                    value="\n".join(chunk),
                    inline=False
                )
    else:
        embed.add_field(
            name="üìó ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å",
            value="*‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡∏ô‡∏µ‡πâ*",
            inline=False
        )

    embed.set_footer(text="‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î")
    return embed


async def update_profession_display():
    """‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡∏≤‡∏°‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"""
    channel = bot.get_channel(PROFESSION_DISPLAY_CHANNEL_ID)
    if not channel:
        return
    
    # ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó
    async for message in channel.history(limit=100):
        if message.author == bot.user:
            await message.delete()
    
    profession_messages.clear()
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏≠‡∏≤‡∏ä‡∏µ‡∏û
    for role_id in PROFESSIONS.keys():
        embed = await create_profession_embed(role_id, channel.guild)
        if embed:
            message = await channel.send(embed=embed)
            profession_messages[role_id] = message.id

async def update_single_profession_display(role_id, guild):
    """‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ç‡∏≠‡∏á‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡πÄ‡∏î‡∏µ‡∏¢‡∏ß"""
    channel = bot.get_channel(PROFESSION_DISPLAY_CHANNEL_ID)
    if not channel or role_id not in PROFESSIONS:
        return
    
    embed = await create_profession_embed(role_id, guild)
    if not embed:
        return
    
    # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏î‡∏¥‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
    if role_id in profession_messages:
        try:
            message = await channel.fetch_message(profession_messages[role_id])
            await message.edit(embed=embed)
        except discord.NotFound:
            # ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Å‡πà‡∏≤‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡πÅ‡∏•‡πâ‡∏ß ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
            message = await channel.send(embed=embed)
            profession_messages[role_id] = message.id
    else:
        message = await channel.send(embed=embed)
        profession_messages[role_id] = message.id

# Event ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á role
@bot.event
async def on_member_update(before, after):
    """‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á role ‡∏Ç‡∏≠‡∏á‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å"""
    # ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤ role ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    before_roles = set(role.id for role in before.roles)
    after_roles = set(role.id for role in after.roles)
    
    # ‡∏´‡∏≤ role ‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏•‡∏ö
    added_roles = after_roles - before_roles
    removed_roles = before_roles - after_roles
    
    # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö role ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
    changed_profession_roles = (added_roles | removed_roles) & set(PROFESSIONS.keys())
    
    for role_id in changed_profession_roles:
        await update_single_profession_display(role_id, after.guild)

# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
@bot.command()
@commands.has_permissions(administrator=True)
async def refresh_professions(ctx):
    """‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡∏≤‡∏°‡∏≠‡∏≤‡∏ä‡∏µ‡∏û"""
    await ctx.send("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡∏≤‡∏°‡∏≠‡∏≤‡∏ä‡∏µ‡∏û...")
    await update_profession_display()
    await ctx.send("‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!")

# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
@bot.command()
@commands.has_permissions(administrator=True)
async def set_profession_channel(ctx, channel: discord.TextChannel = None):
    """‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ä‡πà‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡∏≤‡∏°‡∏≠‡∏≤‡∏ä‡∏µ‡∏û"""
    global PROFESSION_DISPLAY_CHANNEL_ID
    
    if channel is None:
        channel = ctx.channel
    
    PROFESSION_DISPLAY_CHANNEL_ID = channel.id
    await ctx.send(f"‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡∏≤‡∏°‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡πÄ‡∏õ‡πá‡∏ô {channel.mention} ‡πÅ‡∏•‡πâ‡∏ß")
    
    # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
    await update_profession_display()

# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏≠‡∏≤‡∏ä‡∏µ‡∏û
@bot.command()
@commands.has_permissions(administrator=True)
async def profession_stats(ctx):
    """‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏≠‡∏≤‡∏ä‡∏µ‡∏û"""
    embed = discord.Embed(
        title="üìä ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ï‡∏≤‡∏°‡∏≠‡∏≤‡∏ä‡∏µ‡∏û",
        color=discord.Color.green(),
        timestamp=datetime.now()
    )
    
    total_members = 0
    stats_list = []
    
    for role_id, profession_name in PROFESSIONS.items():
        role = ctx.guild.get_role(role_id)
        if role:
            member_count = len(role.members)
            total_members += member_count
            stats_list.append(f"**{profession_name}**: {member_count} ‡∏Ñ‡∏ô")
    
    embed.add_field(
        name="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏≠‡∏≤‡∏ä‡∏µ‡∏û",
        value="\n".join(stats_list) if stats_list else "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
        inline=False
    )
    
    embed.add_field(
        name="‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î",
        value=f"**{total_members}** ‡∏Ñ‡∏ô",
        inline=False
    )
    
    embed.set_footer(text="‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ ‡∏ì ‡πÄ‡∏ß‡∏•‡∏≤")
    await ctx.send(embed=embed)



# ‡∏á‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏ï‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ö‡∏≠‡∏ó
load_config()
keep_alive()

bot.run(os.getenv('discordkey'))